<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_airline.GetContactsFromMission</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Returns an array of contact objects which are associated to a given mission. </description>
        <name>GetContactsFromMission</name>
        <script><![CDATA[function GetContactsFromMission(vMission)
{
	var GetRecord = x_snc_devtools.GetRecord;
	var IsValidRecord = x_snc_devtools.IsValidRecord;
	var Clone = x_snc_devtools.Clone;
	var ArrayPushUnique = x_snc_devtools.ArrayPushUnique;
	var GetArrayValue = x_snc_devtools.GetArrayValue;
	var ArrayAppend = x_snc_devtools.ArrayAppend;
	var ArrayUnique = x_snc_devtools.ArrayUnique;
	var GetStringValue = x_snc_devtools.GetStringValue;

	
	var aContacts = [];
	
	var grMission = GetRecord('x_snc_airline_mission',vMission);
	if (IsValidRecord(grMission) == false)
	{
		return false;
	}
	
	// mission
	var grFlightOperator = GetRecord('sys_user',grMission.flight_operator);
	if (IsValidRecord(grFlightOperator) == true)
	{
		ArrayPushUnique(aContacts,Clone(grFlightOperator));
	}
	
	var strContacts = GetStringValue(grMission.contacts);
	var aDirectContactSysIds = GetArrayValue(strContacts);
	for (var nContact = 0; nContact < aDirectContactSysIds.length; nContact++)
	{
		var grContact = GetRecord('sys_user',aDirectContactSysIds[nContact]);
		if (IsValidRecord(grContact) == true)
		{
			ArrayPushUnique(aContacts,Clone(grContact));
		}
	}
	

	
	var aPassengerSysIds = [];
	var aParcelSysIds = [];
	
	
	
	
	// flights
	var grFlight = new GlideRecord('x_snc_airline_flight');
	grFlight.addQuery('mission','=',grMission.sys_id);
	grFlight.query();
	while (grFlight.next())
	{
		var grPilot = GetPilotRecord(grFlight.pilot);
		if (IsValidRecord(grPilot) == true)
		{
			ArrayPushUnique(aContacts,Clone(grPilot));
		}
		var grCoPilot = GetPilotRecord(grFlight.co_pilot);
		if (IsValidRecord(grCoPilot) == true)
		{
			ArrayPushUnique(aContacts,Clone(grCoPilot));
		}
		
		aPassengerSysIds = ArrayAppend(GetArrayValue(grFlight.passenger_boarding));
		aParcelSysIds = ArrayAppend(GetArrayValue(grFlight.parcel_load));

		var grStop = new GlideRecord('x_snc_airline_flight_stop');
		grStop.addQuery('flight','=',grFlight.sys_id);
		grStop.query();
		while (grStop.next())
		{
			aPassengerSysIds = ArrayAppend(GetArrayValue(grStop.passenger_boarding));
			aParcelSysIds = ArrayAppend(GetArrayValue(grStop.parcel_load));
		}
		
	}

	// passengers
	aPassengerSysIds = ArrayUnique(aPassengerSysIds);
	var aPassengers = [];
	
	for (var nPassenger = 0; nPassenger < aPassengerSysIds.length; nPassenger++)
	{
		var grPassenger = GetPassengerRecord(aPassengerSysIds[nPassenger]);
		if (IsValidRecord(grPassenger) == true)
		{
			var aContactSysIds = GetArrayValue(grPassenger.contacts);
			for (var nContact = 0; nContact < aContactSysIds.length; nContact++)
			{
				var grContact = GetRecord('sys_user',aContactSysIds[nContact]);
				if (IsValidRecord(grContact) == true)
				{
					ArrayPushUnique(aContacts,Clone(grContact));
				}
			}
		}
	}
	
	// parcels
	aParcelSysIds = ArrayUnique(aParcelSysIds);
	var aParcels = [];
	
	for (var nParcel = 0; nParcel < aParcelSysIds.length; nParcel++)
	{
		var grParcel = x_snc_parcel.GetParcelRecord(aParcelSysIds[nParcel]);
		if (IsValidRecord(grParcel) == true)
		{
			var aContactSysIds = GetArrayValue(grParcel.contacts);
			for (var nContact = 0; nContact < aContactSysIds.length; nContact++)
			{
				var grContact = GetRecord('sys_user',aContactSysIds[nContact]);
				if (IsValidRecord(grContact) == true)
				{
					ArrayPushUnique(aContacts,Clone(grContact));
				}
			}
		}
	}

	
	// airfields

	return aContacts;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-25 17:54:28</sys_created_on>
        <sys_id>5272e3681b8ca5505b76777d8b4bcb07</sys_id>
        <sys_mod_count>14</sys_mod_count>
        <sys_name>GetContactsFromMission</sys_name>
        <sys_package display_value="Airline" source="x_snc_airline">54ee8da3dbd64110b652edb305961973</sys_package>
        <sys_policy/>
        <sys_scope display_value="Airline">54ee8da3dbd64110b652edb305961973</sys_scope>
        <sys_update_name>sys_script_include_5272e3681b8ca5505b76777d8b4bcb07</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-10-16 18:43:49</sys_updated_on>
    </sys_script_include>
</record_update>
