<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_airline.HtmlRenderPagePriorPermissionRequired</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Renders the page for PPRs</description>
        <name>HtmlRenderPagePriorPermissionRequired</name>
        <script><![CDATA[function HtmlRenderPagePriorPermissionRequired()
{
	if (IsActive() == false)
	{
		return '';
	}
	
	var GetStringValue = x_snc_devtools.GetStringValue;
	var IsValidSysId = x_snc_devtools.IsValidSysId;
	var IsValidRecord = x_snc_devtools.IsValidRecord;
	var GetRecord = x_snc_devtools.GetRecord;
	var GetBoolValue = x_snc_devtools.GetBoolValue;
	var RenderDate = x_snc_devtools.RenderDate;
	var SetValue = x_snc_devtools.SetValue;
	var Clone = x_snc_devtools.Clone;
	var GetKeys = x_snc_devtools.GetKeys;
	var GetValue = x_snc_devtools.GetValue;
	
	function HtmlRenderPagePriorPermissionRequiredStateNoContext()
	{
		var strHtml = '';
 		strHtml += '<p style="color: red;">ERROR: No context defined!</p>';
		return strHtml;
	}
	
	function MakePriorPermissionRequiredHeader(grStop)
	{
		var strHeader = '';
		strHeader += GetStringValue(grStop.flight.number)
		strHeader += ' - Stop '+grStop.stop;
		strHeader += ' - '+grStop.airdrome.display;
		strHeader += ' - '+grStop.flight.aircraft.tail_number;
		return strHeader;
	}
	function MakePriorPermissionRequiredSubject(grStop)
	{
		var strSubject = '';
		strSubject += GetStringValue(grStop.flight.number)
		strSubject += ' - Stop '+grStop.stop;
		strSubject += ' - '+grStop.flight.aircraft.tail_number;
		strSubject += ' - '+RenderDate(grStop.arrival_datetime);
		return strSubject;
	}
	
	
	function HtmlRenderPagePriorPermissionRequiredStateStop(grStop)
	{
		strHtml = '';
		strHtml += '<h2>'+MakePriorPermissionRequiredHeader(grStop)+'</h2>';
		strHtml += '<span>Email:</span><pre>'+GetStringValue(grStop.airdrome.email)+'</pre>';
		strHtml += '<span>Subject:</span><pre>Prior Permission Required: '+MakePriorPermissionRequiredSubject(grStop)+'</pre>';
		
		var strPPR = '';
		strPPR += 'Dear madams and sirs,\n';
		strPPR += '\n';
		strPPR += 'please confirm the following Prior Permission Required request:\n';
		strPPR += '\n';	
		strPPR += MakePriorPermissionRequired(grStop);
		strPPR += '\n';
		strPPR += 'Thank you.\n';
		strPPR += '\n';
		strPPR += 'Best regards,\n';
		
		strHtml += '<span>Body:</span><pre>'+strPPR+'</pre>';
		return strHtml;
	}
	function HtmlRenderPagePriorPermissionRequiredStateFlight(grFlight)
	{
		var strHtml = ''; 
		var grStops = new GlideRecord('x_snc_airline_flight_stop');
		grStops.addQuery('flight','=',grFlight.sys_id);
		grStops.orderBy('stop');
		grStops.query();
		while(grStops.next())
		{
			strHtml += HtmlRenderPagePriorPermissionRequiredStateStop(grStops);
		}
		return strHtml;
	}	
	
	function HtmlRenderPagePriorPermissionRequiredStateMission(grMission)
	{
		var aFlights = [];
		
		var grFlights = new GlideRecord('x_snc_airline_flight');
		grFlights.addQuery('mission','=',grMission.sys_id);
		grFlights.query();
		while (grFlights.next())
		{
			aFlights.push(GetStringValue(grFlights.sys_id));
		}
		
		
		var ppr = {};
		
		var grStops = new GlideRecord('x_snc_airline_flight_stop');
		grStops.addQuery('flight','IN',GetStringValue(aFlights));
		grStops.orderBy('flight.number');
		grStops.query();
		while(grStops.next())
		{
			var grAirdrome = GetRecord('x_snc_airline_airdrome',grStops.airdrome);
			if (IsValidRecord(grAirdrome) == true)
			{
				SetValue(Clone(grStops),ppr,GetStringValue(grStops.airdrome),GetStringValue(grStops.sys_id));
			}
			
			//strHtml += HtmlRenderPagePriorPermissionRequiredStateStop(grStops);
		}
		var strHtml = ''; 
		
		var aAirdromes = GetKeys(ppr);
		for (var nAirdrome = 0; nAirdrome < aAirdromes.length; nAirdrome++)
		{
			var strAirdromeSysId = aAirdromes[nAirdrome];
			var grAirdrome = GetRecord('x_snc_airline_airdrome',strAirdromeSysId);
			
			strHtml += '<h2>'+grAirdrome.display+'</h2>';
			strHtml += '<span>Email:</span><pre>'+GetStringValue(grAirdrome.email)+'</pre>';
			strHtml += '<span>Subject:</span><pre>Prior Permission Required: '+grMission.number+': '+grMission.name+'</pre>';
			
			var strPPR = '';
			strPPR += 'Dear madams and sirs,\n';
			strPPR += '\n';
			strPPR += 'please confirm the following Prior Permission Required request(s):\n';
			strPPR += '\n';	
			
			var aStops = GetKeys(GetValue(ppr,strAirdromeSysId));
			for (var nStop = 0; nStop < aStops.length; nStop++)
			{
				if (nStop > 0)
				{
					strPPR += '##############################\n';
					strPPR += '\n';
				}
				
				var strStopSysId = aStops[nStop];
				var grStop = GetRecord('x_snc_airline_flight_stop',strStopSysId);
				strPPR += MakePriorPermissionRequired(grStop);
			}
			
			strPPR += '\n';
			strPPR += 'Thank you.\n';
			strPPR += '\n';
			strPPR += 'Best regards,\n';
			strHtml += '<span>Body:</span><pre>'+strPPR+'</pre>';			
			
			
			
			
		}
		
		
		
		/*
		
				strHtml = '';
		
		var strPPR = '';
		strPPR += 'Dear madams and sirs,\n';
		strPPR += '\n';
		strPPR += 'please confirm the following Prior Permission Required request:\n';
		strPPR += '\n';	
		strPPR += MakePriorPermissionRequired(grStop);
		strPPR += '\n';
		strPPR += 'Thank you.\n';
		strPPR += '\n';
		strPPR += 'Best regards,\n';
		
		strHtml += '<span>Body:</span><pre>'+strPPR+'</pre>';
		return strHtml;
		
		
		*/
		
		
		
		
		return strHtml;
	}	
	
	var strHtml = '';
	
	
	var strState = '';
	var strStop = GetStringValue(RP.getParameterValue('stop'));
	var strFlight = GetStringValue(RP.getParameterValue('flight'));
	var strMission = GetStringValue(RP.getParameterValue('mission'));
	var grMission = GetRecord('x_snc_airline_mission',strMission);
	if (IsValidRecord(grMission) == true)
	{
		strState = 'mission';
	}
	else
	{
		var grFlight = GetFlightRecord(strFlight);
		if (IsValidRecord(grFlight) == true)
		{
			strState = 'flight';
		}
		else
		{
			var grStop = GetRecord('x_snc_airline_flight_stop',strStop);
			if (IsValidRecord(grStop) == true)
			{
				strState = 'stop';
			}
		}
	}
	strHtml += '<h1>Prior Permission Required</h1>\n';
	switch (strState)
	{
	case 'stop':
		strHtml += HtmlRenderPagePriorPermissionRequiredStateStop(grStop);
		break;
	case 'flight':
		strHtml += HtmlRenderPagePriorPermissionRequiredStateFlight(grFlight);
		break;
	case 'mission':
		strHtml += HtmlRenderPagePriorPermissionRequiredStateMission(grMission);
		break;
	case '':
	default:
		strHtml += HtmlRenderPagePriorPermissionRequiredStateNoContext();
	}
	
	return strHtml;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-07-26 09:04:39</sys_created_on>
        <sys_id>f7d7b667db7cd1109232dad1f3961978</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>HtmlRenderPagePriorPermissionRequired</sys_name>
        <sys_package display_value="Airline WORK IN PROGRESS" source="x_snc_airline">54ee8da3dbd64110b652edb305961973</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Airline WORK IN PROGRESS">54ee8da3dbd64110b652edb305961973</sys_scope>
        <sys_update_name>sys_script_include_f7d7b667db7cd1109232dad1f3961978</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-07-26 09:04:39</sys_updated_on>
    </sys_script_include>
</record_update>
