<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_airline.GetSegmentsFromFlight</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>GetSegmentsFromFlight</name>
        <script><![CDATA[function GetSegmentsFromFlight(strFlightSysId)
{
	var GetStringValue = x_snc_devtools.GetStringValue;
	var GetBoolValue = x_snc_devtools.GetBoolValue;
	var IsValidRecord = x_snc_devtools.IsValidRecord;
	var GetArrayValue = x_snc_devtools.GetArrayValue;
	var ArrayPushUnique = x_snc_devtools.ArrayPushUnique;
	var ArrayRemoveValue = x_snc_devtools.ArrayRemoveValue;
	var GetIntegerValue = x_snc_devtools.GetIntegerValue;
	var Clone = x_snc_devtools.Clone;

	
	function GetTotalParcelWeight(aParcels) 
	{
		var nTotalWeight = 0;
		for (var nParcel = 0; nParcel < aParcels.length; nParcel++)
		{
			var grParcels = x_snc_parcel.GetParcelRecord(aParcels[nParcel]);
			if (IsValidRecord(grParcels))
			{
				var nParcelWeight = GetIntegerValue(grParcels.total_weight);
				if (nParcelWeight == 0)
				{
					return 0;
				}
				nTotalWeight += nParcelWeight;
			}
		}
		return nTotalWeight;
	}

	function GetTotalPassengerWeight(aPassengers) 
	{
		var nTotalWeight = 0;
		for (var nPassenger = 0; nPassenger < aPassengers.length; nPassenger++)
		{
			var grPassengers = GetPassengerRecord(aPassengers[nPassenger]);
			if (IsValidRecord(grPassengers))
			{
				var nPassengerWeight = GetIntegerValue(grPassengers.total_weight);
				if (nPassengerWeight == 0)
				{
					return 0;
				}
				nTotalWeight += nPassengerWeight;
			}
		}
		return nTotalWeight;
	}	
	
	var grFlight = GetFlightRecord(strFlightSysId);
	if (IsValidRecord(grFlight) == false)
	{
		return Array();
	}
	
	var aSegments = Array();
	
	var segment = {};
	
	segment.departure_datetime = GetStringValue(grFlight.departure_datetime);
	segment.departure_icao = GetStringValue(grFlight.departure.icao);
	segment.departure_country = GetStringValue(grFlight.departure.core_country.name);
	segment.departure_european_union = GetBoolValue(grFlight.departure.core_country.x_snc_geodata_european_union);
	segment.departure_schengen = GetBoolValue(grFlight.departure.core_country.x_snc_geodata_schengen);
	segment.parcels = GetArrayValue(grFlight.parcel_load);
	//segment.passengers = GetArrayValue(grFlight.passenger_boarding);
	segment.cargo_weight = GetTotalWeight(segment.parcels);

	
	var grStops = new GlideRecord('x_snc_airline_flight_stop');
	grStops.addQuery('flight','=',grFlight.sys_id);
	grStops.orderBy('stop');
	grStops.query();
	while (grStops.next())
	{
		segment.arrival_datetime = GetStringValue(grStops.arrival_datetime);
		segment.arrival_icao = GetStringValue(grStops.airdrome.icao);
		segment.arrival_country = GetStringValue(grStops.airdrome.core_country.name);
		segment.arrival_european_union = GetBoolValue(grStops.airdrome.core_country.x_snc_geodata_european_union);
		segment.arrival_schengen = GetBoolValue(grStops.airdrome.core_country.x_snc_geodata_schengen);
		
		
		var aParcels = Clone(segment.parcels);
		var aPassengers = Clone(segment.passengers);
	
		
		aSegments.push(segment);
		//Debug(x_snc_devtools.RenderValue(aSegments));
		
		segment = {};
		segment.departure_datetime = GetStringValue(grStops.departure_datetime);
		segment.departure_icao = GetStringValue(grStops.airdrome.icao);
		segment.departure_country = GetStringValue(grStops.airdrome.core_country.name);
		segment.departure_european_union = GetBoolValue(grStops.airdrome.core_country.x_snc_geodata_european_union);
		segment.departure_schengen = GetBoolValue(grStops.airdrome.core_country.x_snc_geodata_schengen);
		
		var aStopParcelUnload = GetArrayValue(grStops.parcel_unload);
		for (var nParcelUnload = 0; nParcelUnload < aStopParcelUnload.length; nParcelUnload++)
		{
			aParcels = ArrayRemoveValue(aParcels,aStopParcelUnload[nParcelUnload]);
		}

		var aStopParcelLoad = GetArrayValue(grStops.parcel_load);
		for (var nParcelLoad = 0; nParcelLoad < aStopParcelLoad.length; nParcelLoad++)
		{
			aParcels = ArrayPushUnique(aParcels,aStopParcelLoad[nParcelLoad]);
		}
		segment.parcels = Clone(aParcels);
		segment.cargo_weight = GetTotalParcelWeight(segment.parcels);

	
		var aStopPassengerXXX = GetArrayValue(grStops.passenger_xxx);
		for (var nPassengerXXX = 0; nPassengerXXX < aStopPassengerXXX.length; nPassengerXXX++)
		{
			aPassengers = ArrayRemoveValue(aParcels,aStopParcelUnload[nParcelUnload]);
		}

		var aStopPassengerBoarding = GetArrayValue(grStops.passenger_boarding);
		for (var nPassengerBoarding = 0; nPassengerBoarding < aStopPassengerBoarding.length; nPassengerBoarding++)
		{
			aPassengers = ArrayPushUnique(aPassengers,aStopPassengerBoarding[nPassengerBoarding]);
		}
		segment.passengers = Clone(aPassengers);
		segment.passenger_weight = GetTotalPassengerWeight(segment.passengers);
	}

	segment.arrival_datetime = GetStringValue(grFlight.arrival_datetime);
	segment.arrival_icao = GetStringValue(grFlight.arrival.icao);
	segment.arrival_country = GetStringValue(grFlight.arrival.core_country.name);
	segment.arrival_european_union = GetBoolValue(grFlight.arrival.core_country.x_snc_geodata_european_union);
	segment.arrival_schengen = GetBoolValue(grFlight.arrival.core_country.x_snc_geodata_schengen);

	aSegments.push(segment);
	//Debug(x_snc_devtools.RenderValue(aSegments));

	
	return aSegments;
	
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-03-29 19:19:28</sys_created_on>
        <sys_id>a04ec8addb628910b652edb305961973</sys_id>
        <sys_mod_count>25</sys_mod_count>
        <sys_name>GetSegmentsFromFlight</sys_name>
        <sys_package display_value="Airline WORK IN PROGRESS" source="x_snc_airline">54ee8da3dbd64110b652edb305961973</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Airline WORK IN PROGRESS">54ee8da3dbd64110b652edb305961973</sys_scope>
        <sys_update_name>sys_script_include_a04ec8addb628910b652edb305961973</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-04-23 16:07:55</sys_updated_on>
    </sys_script_include>
</record_update>
