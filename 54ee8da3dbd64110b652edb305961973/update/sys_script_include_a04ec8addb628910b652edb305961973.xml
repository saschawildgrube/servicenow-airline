<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_airline.GetLAGsFromFlight</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>GetLAGsFromFlight</name>
        <script><![CDATA[function GetLAGsFromFlight(strFlightSysId)
{
	var GetStringValue = x_snc_devtools.GetStringValue;
	var IsValidRecord = x_snc_devtools.IsValidRecord;
	var GetArrayValue = x_snc_devtools.GetArrayValue;
	var ArrayPushUnique = x_snc_devtools.ArrayPushUnique;
	var ArrayRemoveValue = x_snc_devtools.ArrayRemoveValue;

	var grFlight = GetFlightRecord(strFlightSysId);
	if (IsValidRecord(grFlight) == false)
	{
		return Array();
	}
	
	var aLAGs = Array();
	
	var lag = {};
	
	lag.departure_datetime = GetStringValue(grFlight.departure_datetime);
	lag.departure_icao = GetStringValue(grFlight.departure.icao);
	lag.parcels = GetArrayValue(grFlight.parcel_load);
	
	var grStops = new GlideRecord('x_snc_airline_flight_stop');
	grStops.addQuery('flight','=',grFlight.sys_id);
	grStops.orderBy('order');
	grStops.query();
	while (grStops.next())
	{
		lag.arrival_datetime = GetStringValue(grStops.arrival_datetime);
		lag.arrival_icao = GetStringValue(grStops.airdrome.icao);
		
		var aParcels = lag.parcels;
		
		aLAGs.push(lag);
		
		lag = {};
		lag.departure_datetime = GetStringValue(grStops.departure_datetime);
		lag.departure_icao = GetStringValue(grStops.airdrome.icao);
		
		var aStopParcelUnload = GetArrayValue(grStops.parcel_unload);
		for (var nParcelUnload = 0; nParcelUnload < aStopParcelUnload.length; nParcelUnload++)
		{
			aParcels = ArrayRemoveValue(aParcels,aStopParcelUnload[nParcelUnload]);
		}

		var aStopParcelLoad = GetArrayValue(grStops.parcel_load);
		for (var nParcelLoad = 0; nParcelLoad < aStopParcelLoad.length; nParcelLoad++)
		{
			aParcels = ArrayPushUnique(aParcels,aStopParcelLoad[nParcelLoad]);
		}
		lag.parcels = aParcels;
	}

	lag.arrival_datetime = GetStringValue(grFlight.arrival_datetime);
	lag.arrival_icao = GetStringValue(grFlight.arrival.icao);

	aLAGs.push(lag);
	
	return aLAGs;
	
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-03-29 19:19:28</sys_created_on>
        <sys_id>a04ec8addb628910b652edb305961973</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>GetLAGsFromFlight</sys_name>
        <sys_package display_value="Airline WORK IN PROGRESS" source="x_snc_airline">54ee8da3dbd64110b652edb305961973</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Airline WORK IN PROGRESS">54ee8da3dbd64110b652edb305961973</sys_scope>
        <sys_update_name>sys_script_include_a04ec8addb628910b652edb305961973</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-03-31 16:45:27</sys_updated_on>
    </sys_script_include>
</record_update>
